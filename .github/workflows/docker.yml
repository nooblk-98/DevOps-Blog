name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      image_name:
        description: "Override image name (e.g. myuser/myrepo)"
        required: false
        type: string
      tag:
        description: "Additional tag to push (e.g. v1.2.3)"
        required: false
        type: string
      platforms:
        description: "Target platforms"
        required: false
        default: "linux/amd64,linux/arm64"
        type: string
      push:
        description: "Actually push image (set false to build only)"
        required: false
        default: true
        type: boolean

env:
  REGISTRY: docker.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: ${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Compute image name
        run: |
          IMAGE_NAME_INPUT='${{ github.event.inputs.image_name }}'
          if [ -z "$IMAGE_NAME_INPUT" ]; then
            if [ -z "${DOCKERHUB_USERNAME}" ]; then
              echo "::error::DOCKERHUB_USERNAME is not set; please add it to repository secrets or pass image_name input"
              exit 1
            fi
            IMAGE_NAME="${DOCKERHUB_USERNAME}/${{ github.event.repository.name }}"
          else
            IMAGE_NAME="$IMAGE_NAME_INPUT"
          fi
          echo "IMAGE_NAME=$IMAGE_NAME" >> "$GITHUB_ENV"

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=long
            type=ref,event=tag

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event.inputs.push != '' && github.event.inputs.push || true }}
          platforms: ${{ github.event.inputs.platforms != '' && github.event.inputs.platforms || 'linux/amd64,linux/arm64' }}
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ github.event.inputs.tag != '' && format('{0}/{1}:{2}', env.REGISTRY, env.IMAGE_NAME, github.event.inputs.tag) || '' }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
